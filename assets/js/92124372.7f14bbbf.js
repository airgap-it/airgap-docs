"use strict";(self.webpackChunkairgap_docs=self.webpackChunkairgap_docs||[]).push([[5502],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return h}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(t),h=o,y=m["".concat(c,".").concat(h)]||m[h]||p[h]||a;return t?n.createElement(y,i(i({ref:r},u),{},{components:t})):n.createElement(y,i({ref:r},u))}));function h(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},42389:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],s={title:"Why twenty-four word recovery phrase",slug:"/airgap-vault/why-24-word-recovery-phrase"},c=void 0,l={unversionedId:"airgap-vault/faq/why-24-word-recovery-phrase",id:"airgap-vault/faq/why-24-word-recovery-phrase",title:"Why twenty-four word recovery phrase",description:"AirGap Vault supports importing mnemonics that are shorter than 24 words. Specifically, it supports mnemonics of length 12, 15, 18, 21, and 24. However, when generating a new mnemonic with AirGap Vault, the output will always be a 24-word recovery phrase.",source:"@site/docs/airgap-vault/faq/why-24-word-recovery-phrase.mdx",sourceDirName:"airgap-vault/faq",slug:"/airgap-vault/why-24-word-recovery-phrase",permalink:"/airgap-vault/why-24-word-recovery-phrase",editUrl:"https://github.com/airgap-it/airgap-docs/edit/main/src/docs/airgap-vault/faq/why-24-word-recovery-phrase.mdx",tags:[],version:"current",frontMatter:{title:"Why twenty-four word recovery phrase",slug:"/airgap-vault/why-24-word-recovery-phrase"}},u=[],p={toc:u};function m(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"AirGap Vault supports importing mnemonics that are shorter than 24 words. Specifically, it supports mnemonics of length 12, 15, 18, 21, and 24. However, when generating a new mnemonic with AirGap Vault, the output will always be a 24-word recovery phrase."),(0,a.kt)("p",null,"So if you want a 12-word seed, you will have to generate it elsewhere and then import it into your Vault. If you do this, we strongly recommend that you generated it on an offline device."),(0,a.kt)("p",null,"We chose to generate 24 words (256-bit entropy) not because 12 word mnemonics (128-bit entropy) are insecure, but the handling of shorter mnemonics is riskier in a few ways."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"More entropy: The 24 words contain more entropy/randomness. In some cases, if the underlying random number generator isn't as good as it should be, the extra 128 bits of entropy you have in a 24-word phrase can make your mnemonic more secure.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Splitting up seed: Some people "split up" their secret into multiple parts by basically just cutting it into multiple parts. While this is a very bad idea for many reasons, people still do it. Even the bip39 tool by iancoleman has this feature for some reason. If you split up a 12 word mnemonic, the time to brute force it in case you find one part is a couple of minutes. With a 24 word mnemonic, it\'s still going to be thousands of years.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Unscramble: Some people like to "swap" some of their words or "scramble" their recovery phrase when they write it down. If you do this with a 24-word mnemonic, chances are higher that a brute force attack will not be successful in a reasonable amount of time. However with a 12-word mnemonic, all combinations can be checked in a few hours or less.'))),(0,a.kt)("p",null,'So it\'s not really a "mathematical" reason why we use 24 words, but rather to protect our users from losing their funds if they make mistakes.'))}m.isMDXComponent=!0}}]);